# Stage 1: Use an official Python runtime as a parent image
FROM python:3.11-slim

# Set the working directory in the container
WORKDIR /app

# Install system dependencies: Apache2 web server
# We clean up the apt cache to keep the image size down
RUN apt-get update && \
    apt-get install -y apache2 && \
    rm -rf /var/lib/apt/lists/*

# Copy the Python requirements file and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application files into the container
COPY . .

# Copy the Apache configuration to the correct location in the container,
# overwriting the default site configuration.
COPY apache.conf /etc/apache2/sites-available/000-default.conf

# Apache serves files from /var/www/html by default.
# We need to copy our frontend files there.
RUN cp -r templates/index.html /var/www/html/index.html && \
    cp -r static /var/www/html/

# Enable the necessary Apache modules for proxying
RUN a2enmod proxy && a2enmod proxy_http

# Make the entrypoint script executable
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Expose port 80 to the outside world. This is the port Apache listens on.
EXPOSE 80

# Set the entrypoint to our custom script
ENTRYPOINT ["entrypoint.sh"]