version: '3.8'

services:
  webapp:
    build: .
    container_name: gemini_chat_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - .:/app  # Mounts the current directory into the container for development
    environment:
      # These variables will be read by app.py
      # IMPORTANT: For production, use Docker secrets or a more secure method
      # than a .env file checked into version control.
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      # This connection string tells Flask to connect to the 'db' service
      - DATABASE_URL=postgresql://user:password@db:5432/mydatabase
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      # These credentials must match the DATABASE_URL above
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydatabase

volumes:
  postgres_data: